/*
 * Purpose: Main frame used to display Package tool class for TravelExperts Database 
 * Author: Mark Poffenroth
 * Date: August 2015
 */

package gui;

import static dbase.MySQLData.connectDB;
import static dbase.PackageDB.insertTravelPackage;
import static dbase.PackageDB.updateTravelPackage;
import static dbase.PackageDB.deleteTravelPackage;
import static dbase.PackageDB.getTravelPackages;
import dbase.TravelPackage;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.text.NumberFormatter;

public class PackageMainFrame extends javax.swing.JInternalFrame {


    
    /**
     * Creates new form PackageMainFrame
     */
    public PackageMainFrame() {
        initComponents();
 
        // Ititialize form visibility
        btnGetPackages.setVisible(false);
        lblNameIncludes.setVisible(false);
        txtPkgNameIncludes.setVisible(false);
        lblNameAnd.setVisible(false);
        txtPkgNameIncludes2.setVisible(false);
        lblPriceRange.setVisible(false);  
        txtPriceLow.setVisible(false);
        lblPriceTo.setVisible(false);
        txtPriceHigh.setVisible(false);
        lblCommRange.setVisible(false);
        txtCommissionLow.setVisible(false);
        lblCommTo.setVisible(false);
        txtCommissionHigh.setVisible(false);
        lblDateRange.setVisible(false);
        dpStartDate.setVisible(false);
        lblDateTo.setVisible(false);
        dpEndDate.setVisible(false);  
        
        // Format JTable column using renderer
        tblPackages.getColumnModel().getColumn(5).setCellRenderer(new CurrencyRenderer());
        tblPackages.getColumnModel().getColumn(6).setCellRenderer(new CurrencyRenderer());
        // Set JFormattedTextField initial values
        txtPriceLow.setValue(0);
        txtPriceHigh.setValue(10000);
        txtCommissionLow.setValue(0);
        txtCommissionHigh.setValue(1000);
              
        // Fill Package table w/ package records
        applyFilter();
        // Fill Package table w/ Package records
        //fillTablePackages(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtPackageId = new javax.swing.JTextField();
        txtPkgName = new javax.swing.JTextField();
        dpPkgStartDate = new org.jdesktop.swingx.JXDatePicker();
        dpPkgEndDate = new org.jdesktop.swingx.JXDatePicker();
        txtPkgDesc = new javax.swing.JTextField();
        txtPkgBasePrice = new javax.swing.JTextField();
        txtPkgAgencyCommission = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnUpdatePackage = new javax.swing.JButton();
        btnAddPackage = new javax.swing.JButton();
        btnDeletePackage = new javax.swing.JButton();
        btnEditProductSupplier = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPackages = new javax.swing.JTable();
        btnGetPackages = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblNameIncludes = new javax.swing.JLabel();
        lblPriceRange = new javax.swing.JLabel();
        lblCommRange = new javax.swing.JLabel();
        lblDateRange = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtPkgNameIncludes = new javax.swing.JTextField();
        txtPriceLow = new javax.swing.JFormattedTextField();
        txtCommissionLow = new javax.swing.JFormattedTextField();
        dpStartDate = new org.jdesktop.swingx.JXDatePicker();
        jPanel7 = new javax.swing.JPanel();
        txtPkgNameIncludes2 = new javax.swing.JTextField();
        txtPriceHigh = new javax.swing.JFormattedTextField();
        txtCommissionHigh = new javax.swing.JFormattedTextField();
        dpEndDate = new org.jdesktop.swingx.JXDatePicker();
        jPanel8 = new javax.swing.JPanel();
        lblNameAnd = new javax.swing.JLabel();
        lblPriceTo = new javax.swing.JLabel();
        lblCommTo = new javax.swing.JLabel();
        lblDateTo = new javax.swing.JLabel();
        lblListPackages = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuShowFilter = new javax.swing.JMenu();
        mnuHideFilter = new javax.swing.JMenu();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Package Tools");
        setMinimumSize(new java.awt.Dimension(900, 750));
        setPreferredSize(new java.awt.Dimension(900, 750));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new java.awt.GridLayout(7, 0, 1, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Package ID ");
        jPanel2.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Package Name");
        jPanel2.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Package Start Date");
        jPanel2.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Package End Date");
        jPanel2.add(jLabel4);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Package Description");
        jPanel2.add(jLabel5);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Package Base Price");
        jPanel2.add(jLabel6);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Package Agency Commission");
        jPanel2.add(jLabel7);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 190, 290));

        jPanel3.setLayout(new java.awt.GridLayout(7, 1, 0, 10));

        txtPackageId.setEditable(false);
        jPanel3.add(txtPackageId);

        txtPkgName.setName("txtPackageName"); // NOI18N
        jPanel3.add(txtPkgName);
        jPanel3.add(dpPkgStartDate);
        jPanel3.add(dpPkgEndDate);

        txtPkgDesc.setName("txtPackageDescription"); // NOI18N
        jPanel3.add(txtPkgDesc);
        jPanel3.add(txtPkgBasePrice);
        jPanel3.add(txtPkgAgencyCommission);

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 420, 290));

        jPanel5.setLayout(new java.awt.GridLayout(4, 1, 0, 10));

        btnUpdatePackage.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdatePackage.setText("Update");
        btnUpdatePackage.setEnabled(false);
        btnUpdatePackage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdatePackageMouseClicked(evt);
            }
        });
        jPanel5.add(btnUpdatePackage);

        btnAddPackage.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAddPackage.setText("Add");
        btnAddPackage.setEnabled(false);
        btnAddPackage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddPackageMouseClicked(evt);
            }
        });
        jPanel5.add(btnAddPackage);

        btnDeletePackage.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDeletePackage.setText("Delete");
        btnDeletePackage.setEnabled(false);
        btnDeletePackage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeletePackageMouseClicked(evt);
            }
        });
        jPanel5.add(btnDeletePackage);

        btnEditProductSupplier.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEditProductSupplier.setText("Edit Products/Suppliers");
        btnEditProductSupplier.setEnabled(false);
        btnEditProductSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditProductSupplierMouseClicked(evt);
            }
        });
        jPanel5.add(btnEditProductSupplier);

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 430, 160, 200));

        tblPackages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Package Name", "Start Date", "End Date", "Description", "Base Price", "Commission"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPackages.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPackages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPackagesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPackages);
        if (tblPackages.getColumnModel().getColumnCount() > 0) {
            tblPackages.getColumnModel().getColumn(0).setMinWidth(50);
            tblPackages.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPackages.getColumnModel().getColumn(0).setMaxWidth(50);
            tblPackages.getColumnModel().getColumn(2).setMinWidth(90);
            tblPackages.getColumnModel().getColumn(2).setPreferredWidth(90);
            tblPackages.getColumnModel().getColumn(2).setMaxWidth(90);
            tblPackages.getColumnModel().getColumn(3).setMinWidth(90);
            tblPackages.getColumnModel().getColumn(3).setPreferredWidth(90);
            tblPackages.getColumnModel().getColumn(3).setMaxWidth(90);
            tblPackages.getColumnModel().getColumn(5).setMinWidth(100);
            tblPackages.getColumnModel().getColumn(5).setPreferredWidth(100);
            tblPackages.getColumnModel().getColumn(5).setMaxWidth(100);
            tblPackages.getColumnModel().getColumn(6).setMinWidth(100);
            tblPackages.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblPackages.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 860, 240));

        btnGetPackages.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnGetPackages.setText("Get Packages");
        btnGetPackages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGetPackagesMouseClicked(evt);
            }
        });
        getContentPane().add(btnGetPackages, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 190, 32));

        jPanel4.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        lblNameIncludes.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNameIncludes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameIncludes.setText("Name Includes");
        jPanel4.add(lblNameIncludes);

        lblPriceRange.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblPriceRange.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPriceRange.setText("Price Range");
        jPanel4.add(lblPriceRange);

        lblCommRange.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCommRange.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommRange.setText("Commission Range");
        jPanel4.add(lblCommRange);

        lblDateRange.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDateRange.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDateRange.setText("Date Range");
        jPanel4.add(lblDateRange);

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 160, 120));

        jPanel6.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        txtPkgNameIncludes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPkgNameIncludesKeyTyped(evt);
            }
        });
        jPanel6.add(txtPkgNameIncludes);

        txtPriceLow.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0"))));
        txtPriceLow.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtPriceLowPropertyChange(evt);
            }
        });
        jPanel6.add(txtPriceLow);

        txtCommissionLow.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0"))));
        txtCommissionLow.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCommissionLowPropertyChange(evt);
            }
        });
        txtCommissionLow.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommissionLowKeyTyped(evt);
            }
        });
        jPanel6.add(txtCommissionLow);

        dpStartDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dpStartDatePropertyChange(evt);
            }
        });
        jPanel6.add(dpStartDate);

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 180, 120));

        jPanel7.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        txtPkgNameIncludes2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPkgNameIncludes2KeyTyped(evt);
            }
        });
        jPanel7.add(txtPkgNameIncludes2);

        txtPriceHigh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0"))));
        txtPriceHigh.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtPriceHighPropertyChange(evt);
            }
        });
        jPanel7.add(txtPriceHigh);

        txtCommissionHigh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0"))));
        txtCommissionHigh.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCommissionHighPropertyChange(evt);
            }
        });
        txtCommissionHigh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCommissionHighKeyTyped(evt);
            }
        });
        jPanel7.add(txtCommissionHigh);

        dpEndDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dpEndDatePropertyChange(evt);
            }
        });
        jPanel7.add(dpEndDate);

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 200, 120));

        jPanel8.setLayout(new java.awt.GridLayout(4, 0, 0, 8));

        lblNameAnd.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNameAnd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNameAnd.setText("and");
        jPanel8.add(lblNameAnd);

        lblPriceTo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblPriceTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPriceTo.setText("to");
        jPanel8.add(lblPriceTo);

        lblCommTo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCommTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCommTo.setText("to");
        jPanel8.add(lblCommTo);

        lblDateTo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDateTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDateTo.setText("to");
        jPanel8.add(lblDateTo);

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 60, 120));

        lblListPackages.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblListPackages.setText("List of Packages");
        getContentPane().add(lblListPackages, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 190, 24));

        mnuShowFilter.setText("Show Filter");
        mnuShowFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuShowFilterMouseClicked(evt);
            }
        });
        jMenuBar1.add(mnuShowFilter);

        mnuHideFilter.setText("Hide Filter");
        mnuHideFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuHideFilterMouseClicked(evt);
            }
        });
        jMenuBar1.add(mnuHideFilter);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Display package text fields for package clicked in packages list
    private void tblPackagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPackagesMouseClicked
        // Get value of PackageId field from packages table
        Object packageId = ((DefaultTableModel) tblPackages.getModel()).getValueAt(tblPackages.getSelectedRow(), 0);
        // Fill package text fields for selected package id
        fillTextFieldsPackageId(packageId.toString());
    }//GEN-LAST:event_tblPackagesMouseClicked

    
    // Update Package record to database
    private void btnUpdatePackageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdatePackageMouseClicked
        // Validate data
        if (isVa1idData())
        {            
            // User message
            String message = "Update this Package? \nPackage ID:" + txtPackageId.getText() + 
                "\nPackage Name: " + txtPkgName.getText();

            // Display message in message box and get user response
            int response = JOptionPane.showConfirmDialog(rootPane, message, "Please Confirm Action",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            // User selects No to cancel action
            if (response == JOptionPane.NO_OPTION) {
                System.out.println("No button clicked");
            } 
            // User selects Yes to confirm action
            else if (response == JOptionPane.YES_OPTION) {
                System.out.println("Yes button clicked");       
                TravelPackage travelPackage = new TravelPackage();
                travelPackage.setPackageId(Integer.parseInt(txtPackageId.getText()));
                travelPackage.setPkgName(txtPkgName.getText()); 
                travelPackage.setPkgStartDate(dpPkgStartDate.getDate());
                travelPackage.setPkgEndDate(dpPkgEndDate.getDate());
                travelPackage.setPkgDesc(txtPkgDesc.getText());
                travelPackage.setPkgBasePrice(Double.parseDouble(txtPkgBasePrice.getText()));
                travelPackage.setPkgAgencyCommission(Double.parseDouble(txtPkgAgencyCommission.getText()));
                
                // Check for data consistency before updating
                // Query database for current package details for this package ID
                List<TravelPackage> travelPackages = new ArrayList<TravelPackage>();
                String packageId = " = " + txtPackageId.getText();
                travelPackages = getTravelPackages(packageId);
                
                // Compare current Package details to Package details stored on form load
                if (checkPackageConsistency(travelPackages.get(0)))
                {
                    System.out.println("Records are equal");
                    // Update package record
                    updateTravelPackage(travelPackage);   

                    // Refresh package table list
                    fillTablePackages(filter);
                    // Reset package fields
                    clearFormContent();
                    
                    // Inform user of update success
                    JOptionPane.showMessageDialog(rootPane, "Package successfully updated", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                // Abort update since current Package details have changed since form data was loaded
                else
                {
                    // Inform user of update failure
                    System.out.println("Records are different");
                    JOptionPane.showMessageDialog(rootPane, "Error updating Package", "Error", JOptionPane.ERROR_MESSAGE);                    
                }
            } 
            // User closes message box without selecting Yes or No
            else if (response == JOptionPane.CLOSED_OPTION) {
                System.out.println("JOptionPane closed");
            }
        }
    }//GEN-LAST:event_btnUpdatePackageMouseClicked

    
    // Add new Package record to database
    private void btnAddPackageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddPackageMouseClicked
        
        // Validate data
        if (isVa1idData())
        {
            // User message
            String message = "Add this Package?\nPackage Name: " + txtPkgName.getText();

            // Display message in message box and get user response
            int response = JOptionPane.showConfirmDialog(rootPane, message, "Please Confirm Action",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            // User selects No to cancel action
            if (response == JOptionPane.NO_OPTION) {
                System.out.println("No button clicked");
            } 
            // User selects Yes to confirm action
            else if (response == JOptionPane.YES_OPTION) {
                System.out.println("Yes button clicked");       
                TravelPackage travelPackage = new TravelPackage();
                travelPackage.setPackageId(Integer.parseInt(txtPackageId.getText()));
                travelPackage.setPkgName(txtPkgName.getText());
                travelPackage.setPkgStartDate(dpPkgStartDate.getDate());
                travelPackage.setPkgEndDate(dpPkgEndDate.getDate());
                travelPackage.setPkgDesc(txtPkgDesc.getText());
                travelPackage.setPkgBasePrice(Double.parseDouble(txtPkgBasePrice.getText()));
                travelPackage.setPkgAgencyCommission(Double.parseDouble(txtPkgAgencyCommission.getText()));
                insertTravelPackage(travelPackage); 
                
                // Refresh package table list
                fillTablePackages(filter);
                // Reset package fields
                clearFormContent();
                
                // Inform user of update success
                JOptionPane.showMessageDialog(rootPane, "Package successfully added", "Success", JOptionPane.INFORMATION_MESSAGE);
            } 
            // User closes message box without selecting Yes or No
            else if (response == JOptionPane.CLOSED_OPTION) {
                System.out.println("JOptionPane closed");
            }  
        }
    }//GEN-LAST:event_btnAddPackageMouseClicked

    
    // Delete package record
    private void btnDeletePackageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletePackageMouseClicked
        // User message
        String message = "Delete this Package? \nPackage ID:" + txtPackageId.getText() + 
            "\nPackage Name: " + txtPkgName.getText();
        
        // Display message in message box and get user response
        int response = JOptionPane.showConfirmDialog(rootPane, message, "Please Confirm Action",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        // User selects No to cancel action
        if (response == JOptionPane.NO_OPTION) {
            System.out.println("No button clicked");
        } 
        // User selects Yes to confirm action
        else if (response == JOptionPane.YES_OPTION) {
            System.out.println("Yes button clicked");       
            deleteTravelPackage(txtPackageId.getText());
            
            // Refresh package table list
            fillTablePackages(filter);
            // Reset package fields
            clearFormContent();
            
            // Inform user of update success
            JOptionPane.showMessageDialog(rootPane, "Package successfully deleted", "Success", JOptionPane.INFORMATION_MESSAGE);
        } 
        // User closes message box without selecting Yes or No
        else if (response == JOptionPane.CLOSED_OPTION) {
            System.out.println("JOptionPane closed");
        }   
    }//GEN-LAST:event_btnDeletePackageMouseClicked

    
    // Fill text fields based on selected Package id
    private void btnGetPackagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGetPackagesMouseClicked
        
        // Clear package form fields
        clearFormContent();
                
        // Get list of packages based on search filter
        String filter = " > -1";       
        if (txtPkgNameIncludes.getText() != "")
            filter += " AND PkgName LIKE '%" + txtPkgNameIncludes.getText() + "%'";          
        if (txtPkgNameIncludes2.getText() != "")
            filter += " AND PkgName LIKE '%" + txtPkgNameIncludes2.getText() + "%'";          
        filter += " AND PkgBasePrice > " + txtPriceLow.getValue() + " AND PkgBasePrice < " + txtPriceHigh.getValue();
        filter += " AND PkgAgencyCommission > " + txtCommissionLow.getValue() +
            " AND PkgAgencyCommission < " + txtCommissionHigh.getValue();
        
        // Convert JXDatePicker dates to SQL dates 
        if (dpStartDate.getDate() != null)
        {
            Date dpStart = dpStartDate.getDate();
            java.sql.Date sqlStart = new java.sql.Date(dpStart.getTime());
            filter += " AND PkgStartDate > '" + sqlStart + "'";
        }       
        if (dpEndDate.getDate() != null)
        {
            Date dpEnd = dpEndDate.getDate();
            java.sql.Date sqlEnd = new java.sql.Date(dpEnd.getTime());       
            filter += " AND PkgEndDate < '" + sqlEnd + "'";
        }
     
        // Fill package table w/ package list
        fillTablePackages(filter);
    }//GEN-LAST:event_btnGetPackagesMouseClicked

    
    // Open ProductSupplier dialog
    private void btnEditProductSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditProductSupplierMouseClicked
        // Create and display dialog object 
        PackageProductDialog ppDialog = new PackageProductDialog(null, closable, txtPackageId.getText());
        ppDialog.setVisible(true);
    }//GEN-LAST:event_btnEditProductSupplierMouseClicked

    
    // Show search filters
    private void mnuShowFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuShowFilterMouseClicked
        lblNameIncludes.setVisible(true);
        txtPkgNameIncludes.setVisible(true);
        lblNameAnd.setVisible(true);
        txtPkgNameIncludes2.setVisible(true);
        lblPriceRange.setVisible(true);  
        txtPriceLow.setVisible(true);
        lblPriceTo.setVisible(true);
        txtPriceHigh.setVisible(true);
        lblCommRange.setVisible(true);
        txtCommissionLow.setVisible(true);
        lblCommTo.setVisible(true);
        txtCommissionHigh.setVisible(true);
        lblDateRange.setVisible(true);
        dpStartDate.setVisible(true);
        lblDateTo.setVisible(true);
        dpEndDate.setVisible(true);  
    }//GEN-LAST:event_mnuShowFilterMouseClicked

    
    // hide search filters
    private void mnuHideFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuHideFilterMouseClicked
        lblNameIncludes.setVisible(false);
        txtPkgNameIncludes.setVisible(false);
        lblNameAnd.setVisible(false);
        txtPkgNameIncludes2.setVisible(false);
        lblPriceRange.setVisible(false);
        txtPriceLow.setVisible(false);
        lblPriceTo.setVisible(false);
        txtPriceHigh.setVisible(false);
        lblCommRange.setVisible(false);
        txtCommissionLow.setVisible(false);
        lblCommTo.setVisible(false);
        txtCommissionHigh.setVisible(false);
        lblDateRange.setVisible(false);
        dpStartDate.setVisible(false);
        lblDateTo.setVisible(false);
        dpEndDate.setVisible(false);  
    }//GEN-LAST:event_mnuHideFilterMouseClicked

    private void txtPkgNameIncludesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPkgNameIncludesKeyTyped
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtPkgNameIncludesKeyTyped

    private void txtPkgNameIncludes2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPkgNameIncludes2KeyTyped
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtPkgNameIncludes2KeyTyped

    private void txtCommissionLowKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommissionLowKeyTyped
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtCommissionLowKeyTyped

    private void txtCommissionHighKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommissionHighKeyTyped
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtCommissionHighKeyTyped

    private void txtPriceLowPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtPriceLowPropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtPriceLowPropertyChange

    private void txtPriceHighPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtPriceHighPropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtPriceHighPropertyChange

    private void txtCommissionLowPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCommissionLowPropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtCommissionLowPropertyChange

    private void txtCommissionHighPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCommissionHighPropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_txtCommissionHighPropertyChange

    private void dpStartDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dpStartDatePropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_dpStartDatePropertyChange

    private void dpEndDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dpEndDatePropertyChange
        // Fill Package table w/ package records
        applyFilter();
    }//GEN-LAST:event_dpEndDatePropertyChange

    
    /// <summary>
    /// Fill Package table w/ package records
    /// </summary>
    /// <param name=""></param>
    /// <returns></returns>
    private void applyFilter()
    {
        // Clear package form fields
        clearFormContent();
                
        // Get list of packages based on search filter
        String filter = " > -1";       
        if (txtPkgNameIncludes.getText() != "")
            filter += " AND PkgName LIKE '%" + txtPkgNameIncludes.getText() + "%'";          
        if (txtPkgNameIncludes2.getText() != "")
            filter += " AND PkgName LIKE '%" + txtPkgNameIncludes2.getText() + "%'";          
        filter += " AND PkgBasePrice > " + txtPriceLow.getValue() + " AND PkgBasePrice < " + txtPriceHigh.getValue();
        filter += " AND PkgAgencyCommission > " + txtCommissionLow.getValue() +
            " AND PkgAgencyCommission < " + txtCommissionHigh.getValue();
        
        // Convert JXDatePicker dates to SQL dates 
        if (dpStartDate.getDate() != null)
        {
            Date dpStart = dpStartDate.getDate();
            java.sql.Date sqlStart = new java.sql.Date(dpStart.getTime());
            filter += " AND PkgStartDate > '" + sqlStart + "'";
        }       
        if (dpEndDate.getDate() != null)
        {
            Date dpEnd = dpEndDate.getDate();
            java.sql.Date sqlEnd = new java.sql.Date(dpEnd.getTime());       
            filter += " AND PkgEndDate < '" + sqlEnd + "'";
        }
     
        // Fill package table w/ package list
        fillTablePackages(filter);
    }
    

    /// <summary>
    /// Fill Package table w/ package records
    /// </summary>
    /// <param name=""></param>
    /// <returns></returns>
    public void fillTablePackages(String filter)
    {
        // Local variables
        Connection connection = null;
        ResultSet resultSet = null;
        Statement statement = null;
        
        String query = "SELECT * FROM Packages WHERE PackageId " + filter;
        System.out.println(query);
        
        //Vector<Object> data = new Vector<Object>();
        List<TravelPackage> travelPackage = new ArrayList<TravelPackage>();
        
        //TableModel model = null;
        DefaultTableModel model = (DefaultTableModel) tblPackages.getModel();
        model.setRowCount(0);

        try 
        {
            // Open db connection
            connection = connectDB();
            
            // Statements allow us to issue SQL queries to dbase.
            statement = connection.createStatement();
            
            // Execute SQL statement and get back a result set (or an exception)
            resultSet = statement.executeQuery(query);
             
            // Remove existing rows in table
            ((DefaultTableModel) tblPackages.getModel()).setRowCount(0);
           
            // Get count of columns in database table  
            int columns = resultSet.getMetaData().getColumnCount();
                       
            // Read result set 
            while(resultSet.next())
            {  
                // Add records to table 
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {  
                    row[i - 1] = resultSet.getObject(i);
                }
                ((DefaultTableModel) tblPackages.getModel()).insertRow(resultSet.getRow()-1,row);
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        finally {
            // Cleanup
            if (resultSet != null) try { resultSet.close(); } catch (SQLException ignore) {}
            if (statement != null) try { statement.close(); } catch (SQLException ignore) {}
            if (connection != null) try { connection.close(); } catch (SQLException ignore) {}
        }
    } 
    

    /// <summary>
    /// Fill Package text fields for package id
    /// </summary>
    /// <param name="packageId">ID of Package record</param>
    /// <returns></returns>
    private void fillTextFieldsPackageId(String packageId)
    {
        // Set button status
        btnAddPackage.setEnabled(true);
        btnDeletePackage.setEnabled(true);
        btnUpdatePackage.setEnabled(true);
        btnEditProductSupplier.setEnabled(true);
        
        // Get package object for specified packageid
        List<TravelPackage> travelPackages = new ArrayList<TravelPackage>();
        packageId = " = " + packageId;
        travelPackages = getTravelPackages(packageId);
        
        // Copy Package object info to use to check for concurrency issues
        packageOriginal = new TravelPackage(travelPackages.get(0));
        // Uncomment below to simulate test of data consistency
        //packageOriginal.setPkgDesc("changed");
        
        // Fill package text fields with package details
        txtPackageId.setText(String.valueOf(travelPackages.get(0).getPackageId()));
        txtPkgName.setText(travelPackages.get(0).getPkgName());
        dpPkgStartDate.setDate(travelPackages.get(0).getPkgStartDate());
        dpPkgEndDate.setDate(travelPackages.get(0).getPkgEndDate());
        txtPkgDesc.setText(travelPackages.get(0).getPkgDesc());
        txtPkgBasePrice.setText(String.valueOf(travelPackages.get(0).getPkgBasePrice()));
        txtPkgAgencyCommission.setText(String.valueOf(travelPackages.get(0).getPkgAgencyCommission()));
    }
    
    
    // Validate form entry fields
    private boolean isVa1idData()
    {
        SwingValidator sv = new SwingValidator();
                
        // Check these conditions
        return
            sv.isPresent(txtPkgName, "Package Name") &&
            sv.isDate(dpPkgStartDate,"Start Date") &&
            sv.isDate(dpPkgEndDate, "End Date") &&
            sv.isPresent(txtPkgDesc, "Package Description") &&
            sv.isPresent(txtPkgBasePrice, "Package Base Price") &&
            sv.isPresent(txtPkgAgencyCommission, "Agency Commission") &&
            
            sv.isDouble(txtPkgBasePrice, "Number of Years") &&
            sv.isDouble(txtPkgAgencyCommission, "Number of Years") &&       
            sv.isPositive(txtPkgBasePrice, "Package Base Price") &&
            sv.isPositive(txtPkgAgencyCommission, "Agency Commission") &&
                
            sv.isWithinRange(txtPkgBasePrice, "Package Base Price", 0, 1000000) &&    
            sv.isWithinRange(txtPkgAgencyCommission, "Agency Commission", 0, 1000000) &&  
                
            sv.isGreaterThan(txtPkgBasePrice, txtPkgAgencyCommission, "Package Base Price", "Agency Commission") &&
            sv.isValidDate(dpPkgStartDate.getDate(), dpPkgEndDate.getDate(), "Start Date", "End Date");         
    }
          

    // Clear form fields to empty settings
    private void clearFormContent()
    {
        btnAddPackage.setEnabled(false);
        btnDeletePackage.setEnabled(false);
        btnUpdatePackage.setEnabled(false);
        btnEditProductSupplier.setEnabled(false);
         
        txtPackageId.setText("");
        txtPkgName.setText("");
        dpPkgStartDate.setDate(null);
        dpPkgEndDate.setDate(null);
        txtPkgDesc.setText("");
        txtPkgBasePrice.setText("");
        txtPkgAgencyCommission.setText("");
    }

    // Sets date picker search fields to custom dates
    private void setDatePicker()
    {
        Calendar cal = Calendar.getInstance();
        Date today = cal.getTime();
        cal.add(Calendar.YEAR, 1); 
        Date nextYear = cal.getTime();
        cal.add(Calendar.YEAR, -1);
        Date lastYear = cal.getTime();
        dpStartDate.setDate(lastYear);
        dpEndDate.setDate(nextYear);
    }  
        
    private boolean checkPackageConsistency(TravelPackage travelPackage)
    {
        return (packageOriginal.getPackageId() == travelPackage.getPackageId() && 
                packageOriginal.getPkgName().equals(travelPackage.getPkgName()) &&
                packageOriginal.getPkgStartDate().toString().equals(travelPackage.getPkgStartDate().toString()) &&
                packageOriginal.getPkgEndDate().toString().equals(travelPackage.getPkgEndDate().toString()) &&
                packageOriginal.getPkgDesc().equals(travelPackage.getPkgDesc()) && 
                packageOriginal.getPkgBasePrice() == travelPackage.getPkgBasePrice() && 
                packageOriginal.getPkgAgencyCommission() == travelPackage.getPkgAgencyCommission());
    }
    
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPackage;
    private javax.swing.JButton btnDeletePackage;
    private javax.swing.JButton btnEditProductSupplier;
    private javax.swing.JButton btnGetPackages;
    private javax.swing.JButton btnUpdatePackage;
    private org.jdesktop.swingx.JXDatePicker dpEndDate;
    private org.jdesktop.swingx.JXDatePicker dpPkgEndDate;
    private org.jdesktop.swingx.JXDatePicker dpPkgStartDate;
    private org.jdesktop.swingx.JXDatePicker dpStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCommRange;
    private javax.swing.JLabel lblCommTo;
    private javax.swing.JLabel lblDateRange;
    private javax.swing.JLabel lblDateTo;
    private javax.swing.JLabel lblListPackages;
    private javax.swing.JLabel lblNameAnd;
    private javax.swing.JLabel lblNameIncludes;
    private javax.swing.JLabel lblPriceRange;
    private javax.swing.JLabel lblPriceTo;
    private javax.swing.JMenu mnuHideFilter;
    private javax.swing.JMenu mnuShowFilter;
    private javax.swing.JTable tblPackages;
    private javax.swing.JFormattedTextField txtCommissionHigh;
    private javax.swing.JFormattedTextField txtCommissionLow;
    private javax.swing.JTextField txtPackageId;
    private javax.swing.JTextField txtPkgAgencyCommission;
    private javax.swing.JTextField txtPkgBasePrice;
    private javax.swing.JTextField txtPkgDesc;
    private javax.swing.JTextField txtPkgName;
    private javax.swing.JTextField txtPkgNameIncludes;
    private javax.swing.JTextField txtPkgNameIncludes2;
    private javax.swing.JFormattedTextField txtPriceHigh;
    private javax.swing.JFormattedTextField txtPriceLow;
    // End of variables declaration//GEN-END:variables

    // Fields & Properties
    private static final String filter = " > -1";
    private static TravelPackage packageOriginal;   // Package object to store original form data 

}
