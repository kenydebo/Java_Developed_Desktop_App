/*
 * Purpose: Main frame used to display Agent tool class for TravelExperts Database 
 * Author: Filmon Ghezehey
 * Date: August 2015
 */

package gui;

import dbase.Agency;
import static dbase.AgencyDB.getAgenncies;
import dbase.Agent;
import static dbase.AgentDB.getAllAgents;
import static dbase.AgentDB.updateAgent;
import static dbase.AgentDB.insertAgent;
import static dbase.AgentDB.deleteAgent;
import static dbase.MySQLData.connectDB;
import static dbase.MySQLData.getMetaData;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;


public class AgentMainFrame_1 extends javax.swing.JInternalFrame 
{

    /**
     * Creates new form AgentMainFrame
     */
    public AgentMainFrame_1() {
        initComponents();
        
       // fillComboBoxAgentStatus();
        fillTableAgents();        
        chkBActive.setVisible(false);
        chkBInActive.setVisible(false);
        lblFirst.setVisible(false);
        lblAgntId.setVisible(false);
        txtAgentFirstNAme.setVisible(false);
        txtAgencyId.setVisible(false);
    }
    String status = "%" ;   
    String FirstName = "%" ;
    String AgencyId = "%" ;
   // String queryCustomer = "select * from Customers";
  //  String queryAgent = "SELECT * FROM Agents";;
    
    int add = 0;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgents = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtAgentId = new javax.swing.JTextField();
        txtAgtFirstName = new javax.swing.JTextField();
        txtAgtMiddleInitial = new javax.swing.JTextField();
        txtAgtLastName = new javax.swing.JTextField();
        txtAgtBusPhone = new javax.swing.JTextField();
        txtAgtEmail = new javax.swing.JTextField();
        txtAgtPosition = new javax.swing.JTextField();
        cmbAgency = new javax.swing.JComboBox();
        cboAgntStatus = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        lblAgentId = new java.awt.Label();
        lblAgtFirstName = new java.awt.Label();
        lblAgtMiddleInitial = new java.awt.Label();
        lblAgtLastName = new java.awt.Label();
        lblAgtBusPhone = new java.awt.Label();
        lblAgtEmail = new java.awt.Label();
        lblAgtPosition = new java.awt.Label();
        lblAgencyId = new java.awt.Label();
        lblAgtStatus = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        chkBActive = new javax.swing.JCheckBox();
        chkBInActive = new javax.swing.JCheckBox();
        txtAgencyId = new javax.swing.JTextField();
        txtAgentFirstNAme = new javax.swing.JTextField();
        lblAgntId = new javax.swing.JLabel();
        lblFirst = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuEnableFilter = new javax.swing.JMenu();
        MenuDisableFilter = new javax.swing.JMenu();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Agent Tools");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAgents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Agent Id", "First Name", "Middle Initial", "Last Name", "Bus Phone", "Email", "Position", "Agency Id", "Agent Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAgents.getTableHeader().setReorderingAllowed(false);
        tblAgents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgents);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 850, 150));

        jPanel1.setLayout(new java.awt.GridLayout(4, 1, 0, 10));

        btnEdit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });
        jPanel1.add(btnEdit);

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        jPanel1.add(btnAdd);

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        jPanel1.add(btnSave);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 160, 240));

        jPanel2.setLayout(new java.awt.GridLayout(9, 0, 1, 10));

        txtAgentId.setEditable(false);
        txtAgentId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgentId);

        txtAgtFirstName.setEditable(false);
        txtAgtFirstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtFirstName);

        txtAgtMiddleInitial.setEditable(false);
        txtAgtMiddleInitial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtMiddleInitial);

        txtAgtLastName.setEditable(false);
        txtAgtLastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtLastName);

        txtAgtBusPhone.setEditable(false);
        txtAgtBusPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtBusPhone);

        txtAgtEmail.setEditable(false);
        txtAgtEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtEmail);

        txtAgtPosition.setEditable(false);
        txtAgtPosition.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtAgtPosition);

        jPanel2.add(cmbAgency);

        cboAgntStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(cboAgntStatus);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 450, 330));

        jPanel3.setLayout(new java.awt.GridLayout(9, 0, 0, 15));

        lblAgentId.setAlignment(java.awt.Label.RIGHT);
        lblAgentId.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgentId.setText("Select Agent ID:");
        jPanel3.add(lblAgentId);

        lblAgtFirstName.setAlignment(java.awt.Label.RIGHT);
        lblAgtFirstName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtFirstName.setText("Agent First Name:");
        jPanel3.add(lblAgtFirstName);

        lblAgtMiddleInitial.setAlignment(java.awt.Label.RIGHT);
        lblAgtMiddleInitial.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtMiddleInitial.setText("Agent Middle Initial:");
        jPanel3.add(lblAgtMiddleInitial);

        lblAgtLastName.setAlignment(java.awt.Label.RIGHT);
        lblAgtLastName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtLastName.setText("Agent Last Name:");
        jPanel3.add(lblAgtLastName);

        lblAgtBusPhone.setAlignment(java.awt.Label.RIGHT);
        lblAgtBusPhone.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtBusPhone.setText("Agent Bus Phone:");
        jPanel3.add(lblAgtBusPhone);

        lblAgtEmail.setAlignment(java.awt.Label.RIGHT);
        lblAgtEmail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtEmail.setText("Agent Email:");
        jPanel3.add(lblAgtEmail);

        lblAgtPosition.setAlignment(java.awt.Label.RIGHT);
        lblAgtPosition.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtPosition.setText("Agent Position:");
        jPanel3.add(lblAgtPosition);

        lblAgencyId.setAlignment(java.awt.Label.RIGHT);
        lblAgencyId.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgencyId.setText("Agent Agency ID:");
        jPanel3.add(lblAgencyId);

        lblAgtStatus.setAlignment(java.awt.Label.RIGHT);
        lblAgtStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAgtStatus.setText("Agent Status:");
        jPanel3.add(lblAgtStatus);

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 140, 330));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("List of Agents");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 120, 20));

        chkBActive.setText("Active");
        chkBActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkBActiveMouseClicked(evt);
            }
        });
        chkBActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBActiveActionPerformed(evt);
            }
        });
        getContentPane().add(chkBActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 80, 30));

        chkBInActive.setText("InActive");
        chkBInActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkBInActiveMouseClicked(evt);
            }
        });
        chkBInActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBInActiveActionPerformed(evt);
            }
        });
        getContentPane().add(chkBInActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        txtAgencyId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgencyIdKeyTyped(evt);
            }
        });
        getContentPane().add(txtAgencyId, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, 190, 30));

        txtAgentFirstNAme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgentFirstNAmeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgentFirstNAmeKeyTyped(evt);
            }
        });
        getContentPane().add(txtAgentFirstNAme, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 190, 30));

        lblAgntId.setText("AgencyID");
        getContentPane().add(lblAgntId, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 60, 30));

        lblFirst.setText("Agent First Name");
        getContentPane().add(lblFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 100, 20));

        MenuEnableFilter.setText("Show Filter");
        MenuEnableFilter.setActionCommand("HideFilter");
        MenuEnableFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuEnableFilterMouseClicked(evt);
            }
        });
        jMenuBar1.add(MenuEnableFilter);

        MenuDisableFilter.setText("Hide Filter");
        MenuDisableFilter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuDisableFilterMouseClicked(evt);
            }
        });
        jMenuBar1.add(MenuDisableFilter);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
     // When Edit button is clicked, disable it, enable textfields and Save button
    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        //cboAgntStatus.enable(false);
        txtAgentId.setEditable(false);
        btnEdit.setEnabled(false);
        btnAdd.setEnabled(false);
        btnSave.setEnabled(true);
        txtAgtFirstName.setEditable(true);
        txtAgtMiddleInitial.setEditable(true);
        txtAgtLastName.setEditable(true);
        txtAgtBusPhone.setEditable(true);
        txtAgtEmail.setEditable(true);
        txtAgtPosition.setEditable(true);        
        fillComboBoxAgentStatus();
        fillComboBoxAgency();
    }//GEN-LAST:event_btnEditMouseClicked

    
    // When Save button is clicked, disable it, enable Edit button and update data to database
    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
      
        if(isVa1idData())
        {
             String messageUpdate = "Update this Agent? \nAgent ID:" + txtAgentId.getText() + 
            "\nAgent First Name: " + txtAgentFirstNAme.getText();
             
             String messageAdd = "ADD this Agent ?\nAgent First Name: " + txtAgentFirstNAme.getText();
             int response;
             
        if(add==0)
        // Display message in message box and get user response
        response = JOptionPane.showConfirmDialog(rootPane, messageUpdate, "Please Confirm Action",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        else 
            
        response = JOptionPane.showConfirmDialog(rootPane, messageAdd, "Please Confirm Action",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        
        // User selects No to cancel action
        if (response == JOptionPane.NO_OPTION) {
           
        }
         // User selects Yes to confirm action
        else if (response == JOptionPane.YES_OPTION) {
           
        
        btnEdit.setEnabled(true);
        btnSave.setEnabled(false);
        btnAdd.setEnabled(true);
        txtAgtFirstName.setEditable(false);
        txtAgtMiddleInitial.setEditable(false);
        txtAgtLastName.setEditable(false);
        txtAgtBusPhone.setEditable(false);
        txtAgtEmail.setEditable(false);
        txtAgtPosition.setEditable(false);
        txtAgentId.setEditable(false);
        //txtAgencyId.setEditable(false);
         
        
    
            Agent agent = new Agent();
            
           // agent.setAgentId(Integer.parseInt(obj.toString()));
            agent.setAgtFirstName(txtAgtFirstName.getText());
            agent.setAgtLastName(txtAgtLastName.getText());
            agent.setAgtMiddleInitial(txtAgtMiddleInitial.getText());
            agent.setAgtBusPhone(txtAgtBusPhone.getText());
            agent.setAgtEmail(txtAgtEmail.getText());
            agent.setAgtPosition(txtAgtPosition.getText());
           // agent.setAgencyId(Integer.parseInt(txtAgencyId.getText()));
            agent.setAgencyId(Integer.parseInt(cmbAgency.getSelectedItem().toString()));
            agent.setAgentStatus(cboAgntStatus.getSelectedItem().toString());
            cmbAgency.removeAllItems();
            cboAgntStatus.removeAllItems();
            cmbAgency.addItem(agent.getAgencyId());
            cboAgntStatus.addItem(agent.getAgentStatus());
          if(add ==0)
          {
            
            agent.setAgentId(Integer.parseInt(txtAgentId.getText()));            
            updateAgent(agent);
          }
             
            else
          {            
              insertAgent(agent);
              add = 0;
          }
      
          fillTableAgents();
        }
        
          // User closes message box without selecting Yes or No
        else if (response == JOptionPane.CLOSED_OPTION) {
            
        }   
    }//GEN-LAST:event_btnSaveMouseClicked
  }
    
    // Add new Agent record to database
    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        
        add=1;
        cboAgntStatus.removeAllItems();
        //cboAgntStatus.enable(false);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(true);
        btnAdd.setEnabled(false);
        txtAgtFirstName.setEditable(true);
        txtAgtMiddleInitial.setEditable(true);
        txtAgtLastName.setEditable(true);
        txtAgtBusPhone.setEditable(true);
        txtAgtEmail.setEditable(true);
        txtAgtPosition.setEditable(true);
        txtAgentId.setText("");
        txtAgentId.setEditable(false);
        //txtAgencyId.setEditable(true);
        fillComboBoxAgency();
        fillComboBoxAgentStatus();
        
        /*    Object obj = cboAgentId.getSelectedItem(); 
            Agent agent = new Agent();
            agent.setAgentId(Integer.parseInt(obj.toString()));
            agent.setAgtFirstName(txtAgtFirstName.getText());
            agent.setAgtLastName(txtAgtLastName.getText());
            agent.setAgtMiddleInitial(txtAgtMiddleInitial.getText());
            agent.setAgtBusPhone(txtAgtBusPhone.getText());
            agent.setAgtEmail(txtAgtEmail.getText());
            agent.setAgtPosition(txtAgtPosition.getText());
            //agent.setAgencyId(Integer.parseInt(txtAgencyId.getText()));
            agent.setAgencyId((Integer)(cmbAgency.getSelectedItem()));
            agent.setAgencyId((Integer)(cmbAgency.getSelectedItem()));
            cmbAgency.removeAllItems();
            cmbAgency.addItem(agent.getAgencyId());                    
            insertAgent(agent);*/    
    
           
        
            
    }//GEN-LAST:event_btnAddMouseClicked

    
    
     // Test of table mouse click
    private void tblAgentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgentsMouseClicked
        
        Object Agentid = ((DefaultTableModel) tblAgents.getModel()).getValueAt(tblAgents.getSelectedRow(), 0);
        fillTextFieldsAgentId(Agentid.toString());
        System.out.println(Agentid);
    }//GEN-LAST:event_tblAgentsMouseClicked

    private void chkBActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBActiveActionPerformed
        Filter();
    }//GEN-LAST:event_chkBActiveActionPerformed

    private void chkBInActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBInActiveActionPerformed
        Filter();
    }//GEN-LAST:event_chkBInActiveActionPerformed

    private void MenuEnableFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuEnableFilterMouseClicked
      chkBActive.setVisible(true);
      chkBInActive.setVisible(true);
      lblFirst.setVisible(true);
      lblAgntId.setVisible(true);
      txtAgentFirstNAme.setVisible(true);
      txtAgencyId.setVisible(true);
    }//GEN-LAST:event_MenuEnableFilterMouseClicked

    private void MenuDisableFilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuDisableFilterMouseClicked
      chkBActive.setVisible(false);
      chkBInActive.setVisible(false);
      lblFirst.setVisible(false);
      lblAgntId.setVisible(false);
      txtAgentFirstNAme.setVisible(false);
      txtAgencyId.setVisible(false);
    }//GEN-LAST:event_MenuDisableFilterMouseClicked

    private void txtAgentFirstNAmeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgentFirstNAmeKeyPressed
      Filter();
    }//GEN-LAST:event_txtAgentFirstNAmeKeyPressed

    private void txtAgentFirstNAmeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgentFirstNAmeKeyTyped
       Filter();
        
    }//GEN-LAST:event_txtAgentFirstNAmeKeyTyped

    private void txtAgencyIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgencyIdKeyTyped
       Filter();
    }//GEN-LAST:event_txtAgencyIdKeyTyped

    private void chkBActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBActiveMouseClicked
          Filter();
    }//GEN-LAST:event_chkBActiveMouseClicked

    private void chkBInActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBInActiveMouseClicked
          Filter();
    }//GEN-LAST:event_chkBInActiveMouseClicked

    
    
    /// <summary>
    /// Fill Agent combo box w/ agent ids
    /// </summary>
    /// <param name=""></param>
    /// <returns></returns>
    private void fillComboBoxAgentStatus()
    {
                cboAgntStatus.removeAllItems();
                cboAgntStatus.addItem("active");
                cboAgntStatus.addItem("Inactive");
                
                
       
    }
    
      /// <summary>
    /// Fill Agent combo box w/ agent ids
    /// </summary>
    /// <param name=""></param>
    /// <returns></returns>
    private void fillComboBoxAgency()
    {
        // Local variables
        List<Agency> agency = new ArrayList<Agency>();
        
         
        
        // Get list of agents
        agency =  getAgenncies();
        
        try
        {
            // Clear combo box
            cmbAgency.removeAllItems();

            // Add agentid to combo box For each agent in list
            for (Agency a : agency) 
            {
                
                cmbAgency.addItem(a.getAgencyId());
                //System.out.println(a.getAgentId() + a.getAgtLastName());
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }   
    }
    
    
    /// <summary>
    /// Fill Agent text fields for agent id
    /// </summary>
    /// <param name="agentId">ID of Agent record</param>
    /// <returns></returns>
    private void fillTextFieldsAgentId(String agentId)
    {
        // local variables        
        Connection connection = null;
        ResultSet resultSet = null;
        PreparedStatement statement = null;
        
        List<Agent> agents = new ArrayList<Agent>();

        String query = "SELECT * FROM Agents WHERE AgentId=?";
   
        //agents = getAgents(query);

        try
        {
            // Open db connection
            connection = connectDB();
            statement = connection.prepareStatement(query);
            statement.setString(1, agentId);
            resultSet = statement.executeQuery();
             // Clear combo box
            cmbAgency.removeAllItems();
            cboAgntStatus.removeAllItems();

            int nCol = resultSet.getMetaData().getColumnCount();
            
            // Fill text field w/ agent data
            while(resultSet.next())
            {
                txtAgtFirstName.setText(resultSet.getString("AgtFirstName"));
                txtAgtMiddleInitial.setText(resultSet.getString("AgtMiddleInitial"));
                txtAgtLastName.setText(resultSet.getString("AgtLastName"));
                txtAgtBusPhone.setText(resultSet.getString("AgtBusPhone"));
                txtAgtEmail.setText(resultSet.getString("AgtEmail"));
                txtAgtPosition.setText(resultSet.getString("AgtPosition"));                
                cmbAgency.addItem(resultSet.getString("AgencyId"));
                txtAgentId.setText(resultSet.getInt("AgentId")+"");
                cboAgntStatus.addItem(resultSet.getString("AgentStatus"));
              
                        
                
                // Set column headings
                if (nCol > 0)
                {
                    // columns are numbered 1, 2, ...
                    lblAgentId.setText(resultSet.getMetaData().getColumnName(1));
                    lblAgtFirstName.setText(resultSet.getMetaData().getColumnName(2));
                    lblAgtMiddleInitial.setText(resultSet.getMetaData().getColumnName(3));
                    lblAgtLastName.setText(resultSet.getMetaData().getColumnName(4));
                    lblAgtBusPhone.setText(resultSet.getMetaData().getColumnName(5));
                    lblAgtEmail.setText(resultSet.getMetaData().getColumnName(6));
                    lblAgtPosition.setText(resultSet.getMetaData().getColumnName(7));
                    lblAgencyId.setText(resultSet.getMetaData().getColumnName(8));
                }
                else
                {
                    lblAgentId.setText("AgentId");
                    lblAgtFirstName.setText("AgtFirstName");
                    lblAgtMiddleInitial.setText("AgtMiddleInitial");
                    lblAgtLastName.setText("AgtLastName");
                    lblAgtBusPhone.setText("AgtBusPhone");
                    lblAgtEmail.setText("AgtEmail");
                    lblAgtPosition.setText("AgtPosition");
                    lblAgencyId.setText("AgencyId");
                }
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        } 
         finally {
            // Cleanup
            if (resultSet != null) try { resultSet.close(); } catch (SQLException ignore) {}
            if (statement != null) try { statement.close(); } catch (SQLException ignore) {}
            if (connection != null) try { connection.close(); } catch (SQLException ignore) {}
        }
    }
    
    
    /// <summary>
    /// Fill Agent table w/ agent records
    /// </summary>
    /// <param name=""></param>
    /// <returns></returns>
    public void fillTableAgents()
    {
        // Local variables
        Connection connection = null;
        ResultSet resultSet = null;
        Statement statement = null;

        try 
        {
            // Open db connection
            connection = connectDB();
            
            String queryAgent ="SELECT * FROM Agents WHERE AgentStatus like '" +
                                           status + "' AND agtFirstName like '" +
                                           FirstName + "' AND agencyId like '" +
                                           AgencyId + "'"; 
            
            statement = connection.createStatement();
            
            resultSet = statement.executeQuery(queryAgent);
            
            TableModel model = null;
        
            // Remove previously added rows
            while(tblAgents.getRowCount() > 0) 
            {
                ((DefaultTableModel) tblAgents.getModel()).removeRow(0);
            }
            int columns = resultSet.getMetaData().getColumnCount();
            while(resultSet.next())
            {  
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {  
                   row[i - 1] = resultSet.getObject(i);
                }
              ((DefaultTableModel) tblAgents.getModel()).insertRow(resultSet.getRow()-1,row);
               
            }

            resultSet.close();
        }
        //catch(InstantiationException | IllegalAccessException | SQLException e)
        catch (Exception e) {
            e.printStackTrace();
        }
       // return tblAgents();
    }
      
     private boolean isVa1idData()
    {
        SwingValidator sv = new SwingValidator();
        return
           sv.isPresent(txtAgtFirstName, "Agent First Name") &&
            sv.checkinputlength(txtAgtMiddleInitial, "Agent Middle Initial", 5) &&
            sv.isPresent(txtAgtLastName, "Agent Last Name") &&
            sv.checkinputlength(txtAgtLastName, "Agent Last Name",20) &&
            sv.isPresent(txtAgtBusPhone, "Agent Bussiness Phone") &&
            sv.checkinputlength(txtAgtBusPhone, "Agent Bussiness Phone",20) &&
            sv.isPresent(txtAgtEmail, "Agent Email") &&  
            sv.checkinputlength(txtAgtEmail, "Agent Email",50) &&   
            sv.isPresent(txtAgtPosition, "Agent Position") &&
            sv.checkinputlength(txtAgtPosition, "Agent Position",20) &&
            sv.isValidPhoneNumber(txtAgtBusPhone, "Agent Bussiness Phone") &&
            sv.checkinputlength(txtAgtBusPhone, "Agent Bussiness Phone",20) &&
            sv.isValidEmail(txtAgtEmail, "Agent Email");                        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuDisableFilter;
    private javax.swing.JMenu MenuEnableFilter;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cboAgntStatus;
    private javax.swing.JCheckBox chkBActive;
    private javax.swing.JCheckBox chkBInActive;
    private javax.swing.JComboBox cmbAgency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label lblAgencyId;
    private java.awt.Label lblAgentId;
    private javax.swing.JLabel lblAgntId;
    private java.awt.Label lblAgtBusPhone;
    private java.awt.Label lblAgtEmail;
    private java.awt.Label lblAgtFirstName;
    private java.awt.Label lblAgtLastName;
    private java.awt.Label lblAgtMiddleInitial;
    private java.awt.Label lblAgtPosition;
    private java.awt.Label lblAgtStatus;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JTable tblAgents;
    private javax.swing.JTextField txtAgencyId;
    private javax.swing.JTextField txtAgentFirstNAme;
    private javax.swing.JTextField txtAgentId;
    private javax.swing.JTextField txtAgtBusPhone;
    private javax.swing.JTextField txtAgtEmail;
    private javax.swing.JTextField txtAgtFirstName;
    private javax.swing.JTextField txtAgtLastName;
    private javax.swing.JTextField txtAgtMiddleInitial;
    private javax.swing.JTextField txtAgtPosition;
    // End of variables declaration//GEN-END:variables

    private void Filter()
    {
        if (chkBActive.isSelected())
        {
            if(chkBInActive.isSelected())
            {
             status = "%";
            
            }
            else
            {
                status = "active";
            }
        }
        else if(chkBInActive.isSelected())
        {
           status = "inactive" ;
        }
        FirstName = txtAgentFirstNAme.getText()+ "%";   
        AgencyId = txtAgencyId.getText() + "%";             
        
        
        fillTableAgents();
    }
}
