/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dbase.PackageProductSupplierDB;
import dbase.Product;
import dbase.ProductDB;
import dbase.ProductSupplier;
import dbase.ProductSupplierDB;
import dbase.Supplier;
import dbase.SupplierDB;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nokian
 */
public class PackageProductDialog extends javax.swing.JDialog {

    /**
     * Creates new form PackageProductDialog
     */
    public PackageProductDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public PackageProductDialog(java.awt.Frame parent, boolean modal, String packageID) {
        super(parent, modal);
        
        initComponents();

        packageId = packageID;
        
        // Get existing and available product lists for selected package
        fillTableProductsIn(packageId);
        fillTableProductsOut(packageId);   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductsIn = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductsOut = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProductSuppliers = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnProductRemove = new javax.swing.JButton();
        btnProductAdd = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Package Product-Supplier Editor");
        setMinimumSize(new java.awt.Dimension(900, 420));
        setPreferredSize(new java.awt.Dimension(900, 420));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Products in Package");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Products Available");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Product Suppliers");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(132, 132, 132)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 770, 40));

        tblProductsIn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Product", "ID", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductsIn.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblProductsIn);
        if (tblProductsIn.getColumnModel().getColumnCount() > 0) {
            tblProductsIn.getColumnModel().getColumn(0).setMinWidth(30);
            tblProductsIn.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblProductsIn.getColumnModel().getColumn(0).setMaxWidth(30);
            tblProductsIn.getColumnModel().getColumn(1).setMinWidth(120);
            tblProductsIn.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblProductsIn.getColumnModel().getColumn(1).setMaxWidth(120);
            tblProductsIn.getColumnModel().getColumn(2).setMinWidth(40);
            tblProductsIn.getColumnModel().getColumn(2).setPreferredWidth(40);
            tblProductsIn.getColumnModel().getColumn(2).setMaxWidth(40);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 420, 290));

        tblProductsOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Product Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductsOut.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblProductsOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductsOutMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductsOut);
        if (tblProductsOut.getColumnModel().getColumnCount() > 0) {
            tblProductsOut.getColumnModel().getColumn(0).setMinWidth(30);
            tblProductsOut.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblProductsOut.getColumnModel().getColumn(0).setMaxWidth(30);
            tblProductsOut.getColumnModel().getColumn(1).setMinWidth(120);
            tblProductsOut.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblProductsOut.getColumnModel().getColumn(1).setMaxWidth(120);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 150, 290));

        tblProductSuppliers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Supplier Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductSuppliers.setMinimumSize(new java.awt.Dimension(130, 64));
        tblProductSuppliers.setPreferredSize(new java.awt.Dimension(130, 64));
        tblProductSuppliers.setRequestFocusEnabled(false);
        tblProductSuppliers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(tblProductSuppliers);
        if (tblProductSuppliers.getColumnModel().getColumnCount() > 0) {
            tblProductSuppliers.getColumnModel().getColumn(0).setMinWidth(50);
            tblProductSuppliers.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblProductSuppliers.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 290, 290));

        btnProductRemove.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnProductRemove.setText("Remove Product >>");
        btnProductRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProductRemoveMouseClicked(evt);
            }
        });

        btnProductAdd.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnProductAdd.setText("<< Add Product");
        btnProductAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProductAddMouseClicked(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(btnProductRemove)
                .addGap(137, 137, 137)
                .addComponent(btnProductAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(104, 104, 104))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProductRemove)
                    .addComponent(btnProductAdd)
                    .addComponent(btnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 880, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Show Suppliers list for specified productid 
    private void tblProductsOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductsOutMouseClicked
        // Get value of ProductId field from ProductOut table
        Object productId = ((DefaultTableModel) tblProductsOut.getModel()).getValueAt(tblProductsOut.getSelectedRow(), 0);
        
        // Get list of suppliers for specified productid
        List<Supplier> suppliers = new ArrayList<Supplier>();
        suppliers = SupplierDB.getSupplierForProduct(productId.toString());
        
        // Set TableModel 
        DefaultTableModel model = (DefaultTableModel) tblProductSuppliers.getModel();
        // Remove existing rows in table
        model.setRowCount(0);
            
        try 
        {
            // Iterate through objects in products list
            if (suppliers.size() != 0) {
                for (Supplier supplier : suppliers) {
                    // Add columns to object
                    Object[] object = new Object[2];
                    object[0] = supplier.getSupplierId();
                    object[1] = supplier.getSupName();
                    // Add object to row
                    model.addRow(object);
                }
            }
            // Fill table with model
            tblProductSuppliers.setModel(model);
        }
        catch (Exception e) {
            e.printStackTrace();
        }   
    }//GEN-LAST:event_tblProductsOutMouseClicked

    
    // Add Products to Package 
    private void btnProductAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProductAddMouseClicked
        // Check list items selected
        if (tblProductsOut.getSelectedRow() != -1  && tblProductSuppliers.getSelectedRow() != -1 )
        {
            // Get product list item selected
            Object productId = ((DefaultTableModel) tblProductsOut.getModel()).getValueAt(tblProductsOut.getSelectedRow(), 0);
            Object productName = ((DefaultTableModel) tblProductsOut.getModel()).getValueAt(tblProductsOut.getSelectedRow(), 1);
            //System.out.println("Product:" + productId + productName);

            // Get supplier list item selected
            Object supplierId = ((DefaultTableModel) tblProductSuppliers.getModel()).getValueAt(tblProductSuppliers.getSelectedRow(), 0);
            Object supplierName = ((DefaultTableModel) tblProductSuppliers.getModel()).getValueAt(tblProductSuppliers.getSelectedRow(), 1);
            //System.out.println("Supplier:" + supplierId + supplierName);
        
            // User message
            String message = "Add this Product-Supplier pair? \nProduct ID:" + productId + 
                "\n" + productName + "Supplier ID:" + supplierId + "\n" + supplierName;
                
            // Display message in message box and get user response
            int response = JOptionPane.showConfirmDialog(rootPane, message, "Please Confirm Action",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
            // User selects No to cancel action
            if (response == JOptionPane.NO_OPTION) {
                System.out.println("No button clicked");
            } 
            // User selects Yes to confirm action
            else if (response == JOptionPane.YES_OPTION) {

                // Get ProductSupplierId for this ProductID SupplierID pair
                ProductSupplier psid = ProductSupplierDB.getProductSupplier(productId.toString(), supplierId.toString());

                // If ProductSupplierId exists
                if (psid.getProductSupplierId() > 0)
                {
                    // If no PackageID-ProductSupplierId pair exists for this package id, create one 
                    if (!PackageProductSupplierDB.checkPackageProductSupplier(packageId, psid.getProductSupplierId()))
                    {
                        // Update Packages_Products_Suppliers w PackageID and ProductSupplierId
                        if (PackageProductSupplierDB.insertPackageProductSupplier(packageId, psid.getProductSupplierId()));
                        
                        // Inform user of update success
                        JOptionPane.showMessageDialog(rootPane, "Package-Supplier pair successfully added", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                        JOptionPane.showMessageDialog(rootPane, "Package-Supplier pair is already in this package", "Error", JOptionPane.ERROR_MESSAGE);
                }               
            } 
            // User closes message box without selecting Yes or No
            else if (response == JOptionPane.CLOSED_OPTION) {
                System.out.println("JOptionPane closed");
            }   
            // Update product list
            fillTableProductsIn(packageId);
        } 
        else
            JOptionPane.showMessageDialog(rootPane, "Please select one Package and one Supplier", "Error", JOptionPane.ERROR_MESSAGE);            
    }//GEN-LAST:event_btnProductAddMouseClicked

    
    // Remove Products from Package 
    private void btnProductRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProductRemoveMouseClicked
        // Check list items selected
        if (tblProductsIn.getSelectedRow() != -1)
        {
            // Get product list item selected
            Object productId = ((DefaultTableModel) tblProductsIn.getModel()).getValueAt(tblProductsIn.getSelectedRow(), 0);
            Object productName = ((DefaultTableModel) tblProductsIn.getModel()).getValueAt(tblProductsIn.getSelectedRow(), 1);
            System.out.println("Product:" + productId + productName);
            
            // Get supplier list item selected
            Object supplierId = ((DefaultTableModel) tblProductsIn.getModel()).getValueAt(tblProductsIn.getSelectedRow(), 2);
            Object supplierName = ((DefaultTableModel) tblProductsIn.getModel()).getValueAt(tblProductsIn.getSelectedRow(), 3);
            System.out.println("Supplier:" + supplierId + supplierName);
            
            // User message
            String message = "Delete this Product-Supplier pair? \nProduct ID:" + productId + 
                "\n" + productName + "Supplier ID:" + supplierId + "\n" + supplierName;
                
            // Display message in message box and get user response
            int response = JOptionPane.showConfirmDialog(rootPane, message, "Please Confirm Action",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
            // User selects No to cancel action
            if (response == JOptionPane.NO_OPTION) {
                System.out.println("No button clicked");
            } 
            // User selects Yes to confirm action
            else if (response == JOptionPane.YES_OPTION) {

                // Get ProductSupplierId for this ProductID SupplierID pair
                ProductSupplier psid = ProductSupplierDB.getProductSupplier(productId.toString(), supplierId.toString());

                System.out.println("ps psid=" + psid.getProductSupplierId());
                System.out.println("ps pid=" + psid.getProductId());
                System.out.println("ps sid=" + psid.getSupplierId());
                  
                // If ProductSupplierId exists
                if (psid.getProductSupplierId() > 0)
                {
                    
                    // If PackageID-ProductSupplierId pair exists for this package id, delete it 
                    if (PackageProductSupplierDB.checkPackageProductSupplier(packageId, psid.getProductSupplierId()))
                    {
                        // Delete Packages_Products_Suppliers w PackageID and ProductSupplierId
                        PackageProductSupplierDB.deletePackageProductSupplier(packageId, psid.getProductSupplierId());
                        
                        // Inform user of update success
                        JOptionPane.showMessageDialog(rootPane, "Package-Supplier pair successfully deleted", "Success", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                        JOptionPane.showMessageDialog(rootPane, "Package-Supplier pair does not exist for this package", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            } 
            // User closes message box without selecting Yes or No
            else if (response == JOptionPane.CLOSED_OPTION) {
                System.out.println("JOptionPane closed");
            }   
            // Update product list
            fillTableProductsIn(packageId);
        } 
        else
            JOptionPane.showMessageDialog(rootPane, "Please select one Package and one Supplier", "Error", JOptionPane.ERROR_MESSAGE);            
    }//GEN-LAST:event_btnProductRemoveMouseClicked

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        // Close dialog window
        dispose();
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PackageProductDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PackageProductDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PackageProductDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PackageProductDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PackageProductDialog dialog = new PackageProductDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

       
    /// <summary>
    /// Fill ProductsIn table with existing products/suppliers for package id
    /// </summary>
    /// <param name="filter">String of the package id</param>
    /// <returns></returns>
    public void fillTableProductsIn(String filter)
    {
    
        // Get Products-Suppliers list
        List<List<String>> resultsList = new ArrayList<List<String>>();
        resultsList = ProductDB.getProductSupplierInPackage(packageId);
        
         // Set TableModel 
        DefaultTableModel model = (DefaultTableModel) tblProductsIn.getModel();
        // Remove existing rows in table
        model.setRowCount(0);
        
        try 
        {
            // Iterate through objects in products list
            if (resultsList.size() != 0) {
                for (List<String> list : resultsList) {
                    // Add columns to object
                    Object[] object = new Object[4];
                    object[0] = list.get(0); //ProductId();
                    object[1] = list.get(1); //ProdName();
                    object[2] = list.get(2); //SupplierId;
                    object[3] = list.get(3); //SupName;
                    // Add object to row
                    model.addRow(object);
                }
            }
            // Fill table with model
            tblProductsIn.setModel(model);
        }
        catch (Exception e) {
            e.printStackTrace();
        }       
    } 
    
        
    /// <summary>
    /// Fill ProductsOut table with available products
    /// </summary>
    /// <param name="filter">String of the package id</param>
    /// <returns></returns>
    public void fillTableProductsOut(String packageId)
    {
        // Get product list
        List<Product> products = new ArrayList<Product>();
        products = ProductDB.getProducts(">0");

        // Set TableModel 
        DefaultTableModel model = (DefaultTableModel) tblProductsOut.getModel();
        // Remove existing rows in table
        model.setRowCount(0);
            
        try 
        {
            // Iterate through objects in products list
            if (products.size() != 0) {
                for (Product product : products) {
                    // Add columns to object
                    Object[] object = new Object[2];
                    object[0] = product.getProductId();
                    object[1] = product.getProdName();
                    // Add object to row
                    model.addRow(object);
                }
            }
            // Fill table with model
            tblProductsOut.setModel(model);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }   
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnProductAdd;
    private javax.swing.JButton btnProductRemove;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblProductSuppliers;
    private javax.swing.JTable tblProductsIn;
    private javax.swing.JTable tblProductsOut;
    // End of variables declaration//GEN-END:variables

    // Fields & Properties
    private String packageId = "";

}
